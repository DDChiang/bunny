<script>
function post(node){
  var hiddenIngreds = document.createElement("input");
  hiddenIngreds.setAttribute("type", "hidden");
  hiddenIngreds.setAttribute("id", "recipe_j_ingreds");
  hiddenIngreds.setAttribute("name", "recipe[j_ingreds]");
  //store ingred_list text_element values into a json array
  var ingreds_array = '[';
  var recipe_ingreds = document.getElementById("ingred_list");
  var ingreds = recipe_ingreds.getElementsByClassName("text_element");
  for(var i = 0; i < ingreds.length - 1; i++){
    ingreds_array +=  "\""+ingreds[i].value + "\",";
  }
  if (ingreds[ingreds.length - 1].innerHTML.search(/A-Za-z/) != -1){
    ingreds_array += ingreds[ingreds.length - 1] + "]";
  } else {
    ingreds_array = "\""+ingreds_array.slice(0, -1) + ']';
  }
  hiddenIngreds.setAttribute("value", ingreds_array);
  hiddenIngreds.value = hiddenIngreds.value.slice(1); /*for the extra that is inserted when assigning value */
  node.appendChild(hiddenIngreds);
  
  var hiddenSteps = document.createElement("input");
  hiddenSteps.setAttribute("type", "hidden");
  hiddenSteps.setAttribute("id", "recipe_j_steps");
  hiddenSteps.setAttribute("name", "recipe[j_steps]");
  node.appendChild(hiddenSteps);
  var steps_array = '[';
  var recipe_steps = document.getElementById("steps_list");
  var steps = recipe_steps.getElementsByClassName("text_element");
  for(var i = 0; i < steps.length - 1; i++){
    steps_array += "\""+steps[i].value + "\",";
  }
  if (steps[steps.length - 1].innerHTML.search(/A-Za-z/) != -1){
    steps_array += steps[steps.length - 1] + "]";
  } else {
    steps_array = "\""+steps_array.slice(0, -1) + ']';
  }
  hiddenSteps.setAttribute("value", steps_array);
  hiddenSteps.value = hiddenSteps.value.slice(1); //for the extra \" that is inserted when assigning value
  node.appendChild(hiddenSteps);
  node.submit();
  /* For testing purposes*/

}


function removeParentOf(e, list){
  list.removeChild(e.parentNode);
  var siblings = list.getElementsByClassName('text_element');
  //give last sibling 'onkeyup' property
//  siblings[siblings.length - 1].onkeyup = 'addBox(this, \""+list.id+"\")';
  siblings[siblings.length - 1].setAttribute('onkeyup', 'addBox(this, "'+list.id+'")');
  if (list.id.search("step") != -1) { 
    //redo numbering for steps
    var list_items = list.getElementsByClassName('listed_text_item');
    for(var i = 0; i < list_items.length; i++){
      //change numbering
      list_items[i].getElementsByClassName('round_number')[0].innerHTML = i + 1;
    }
  } else {};
};
function test_addBox(id){
  var newChild = document.createElement('div');
  newChild.className="listed_text_item";
  newChild.innerHTML = '<textarea class="text_element" placeholder="eg. 2 tsp flakes" onkeyup="addBox(this, \''+id+'\')"></textarea><a onclick="removeParentOf(this, this.parentNode.parentNode)" class="round_button">x</a>';
  var parentElement = document.getElementById(id);
  parentElement.appendChild(newChild); 
}; 
function test_addRow(id){
  var i = id.length;
  var newChild = document.createElement('div');
  newChild.draggable = true;
  newChild.className="listed_text_item";
  var parentElement = document.getElementById(id);
  var otherChildRows = parentElement.childNodes;
  var siblingRows = parentElement.getElementsByClassName("text_element");
  var numSiblingRows = siblingRows.length;
  var newNumRows = numSiblingRows + 1;
  if (id.search("ingred") == -1) {
    //adding steps
    newChild.innerHTML = '<div class="round_number">'+newNumRows+'</div><textarea class="text_element" placeholder="eg. Boil an egg" onkeyup="addBox(this, \''+id+'\')"></textarea><a onclick="removeParentOf(this, this.parentNode.parentNode)" class="round_button">x</a>';

  } else {
    newChild.innerHTML = '<textarea class="text_element" placeholder="eg. 2 tsp flakes" onkeyup="addBox(this, \''+id+'\')"></textarea><a onclick="removeParentOf(this, this.parentNode.parentNode)" class="round_button">x</a>';
  };
  for(var i = 0; i < numSiblingRows; i++){
    siblingRows[i].removeAttribute("onkeyup");
  };
  parentElement.appendChild(newChild); 
};
function addBox(e, i){
  e.removeAttribute("onkeyup"); 
  test_addRow(i);
};
</script>

<%= form_for(@recipe) do |f| %>
  <% if @recipe.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@recipe.errors.count, "error") %> prohibited this recipe from being saved:</h2>

      <ul>
      <% @recipe.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>
  <div class="field">
    <%= f.label :name %><br>
    <%= f.text_field :name %>
  </div>
  <div class="field">
    <%= f.label :about %><br>
    <%= f.text_area :about %>
  </div>
  <h2>Ingredients</h2>
  <div class="demo">
    <div id="ingred_list">
      <div class="listed_text_item">
        <textarea class="text_element" placeholder="eg. 2 tsp flakes"></textarea>
        <a onclick="removeParentOf(this, this.parentNode.parentNode)" class="round_button">x</a>
      </div>
      <div class="listed_text_item">
        <textarea class="text_element" placeholder="eg. 2 tsp flakes"></textarea>
        <a onclick="removeParentOf(this, this.parentNode.parentNode)" class="round_button">x</a>
      </div>
      <div class="listed_text_item">
        <textarea class="text_element" placeholder="eg. 2 tsp flakes" onkeyup='addBox(this, "ingred_list")'></textarea>
        <a onclick="removeParentOf(this, this.parentNode.parentNode)" class="round_button">x</a>
      </div>
    </div>
    <button class="button_row_add" type="button" onclick='test_addRow("ingred_list")'>+</button>
  </div>
  <h2>Steps</h2>
  <div class="demo">
    <div id="steps_list">
      <div class="listed_text_item">
        <div class="round_number">1</div>
        <textarea class="text_element" placeholder="eg. 2 tsp flakes"></textarea>
        <a onclick="removeParentOf(this, this.parentNode.parentNode)" class="round_button">x</a>
      </div>
      <div class="listed_text_item">
        <div class="round_number">2</div>
        <textarea class="text_element" placeholder="eg. 2 tsp flakes"></textarea>
        <a onclick="removeParentOf(this, this.parentNode.parentNode)" class="round_button">x</a>
      </div>
      <div class="listed_text_item">
        <div class="round_number">3</div>
        <textarea class="text_element" placeholder="eg. 2 tsp flakes" onkeyup='addBox(this, "steps_list")'></textarea>
        <a onclick="removeParentOf(this, this.parentNode.parentNode)" class="round_button">x</a>
      </div>
    </div>
    <button class="button_row_add" type="button" onclick='test_addRow("steps_list")'>+</button>
  </div>
  <%= f.hidden_field :author_id, :value => current_member.id %>
  <div class="actions">
    <button type="button" onclick="post(this.form)">Submit</button>
  </div>
<% end %>

